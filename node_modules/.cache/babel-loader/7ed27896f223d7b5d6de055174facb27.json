{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\jpmota\\\\OneDrive\\\\Scripts\\\\aircnc\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\jpmota\\\\OneDrive\\\\Scripts\\\\aircnc\\\\frontend\\\\src\\\\pages\\\\Dashboard\\\\index.js\";\nimport React, { useEffect, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport socketio from 'socket.io-client';\nimport api from '../../services/api';\nimport './styles.css';\nexport default function Dashboard() {\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        spots = _useState2[0],\n        setSpots = _useState2[1];\n\n  const _useState3 = useState([]),\n        _useState4 = _slicedToArray(_useState3, 2),\n        requests = _useState4[0],\n        setRequests = _useState4[1];\n\n  useEffect(() => {\n    const user_id = localStorage.getItem('user');\n    const socket = socketio('http://localhost:3333', {\n      query: {\n        user_id\n      }\n    });\n    socket.on('booking_request', data => {\n      console.log(data);\n    });\n  }, []);\n  useEffect(() => {\n    async function loadSpots() {\n      const user_id = localStorage.getItem('user');\n      const response = await api.get('/dashboard', {\n        headers: {\n          user_id\n        }\n      });\n      setSpots(response.data);\n    }\n\n    loadSpots();\n  }, []);\n  return React.createElement(React.Fragment, null, React.createElement(\"ul\", {\n    className: \"notifications\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, requests.map(request => {\n    React.createElement(\"li\", {\n      key: request.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, request.user.email), \" est\\xE1 solicitando uma reserva em \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, request.spot.company), \" para a data: \", React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }, request.date), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"ACEITAR\"), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"REJEITAR\")));\n  })), React.createElement(\"ul\", {\n    className: \"spot-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, spots.map(spot => React.createElement(\"li\", {\n    key: spot._id,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, React.createElement(\"header\", {\n    style: {\n      backgroundImage: \"url(\".concat(spot.thumbnail_url, \")\")\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, spot.company), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, spot.price ? \"R$\".concat(spot.price, \"/dia\") : 'GRATUITO')))), React.createElement(Link, {\n    to: \"/new\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    className: \"btn\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \"Cadastrar novo spot\")));\n}","map":{"version":3,"sources":["C:/Users/jpmota/OneDrive/Scripts/aircnc/frontend/src/pages/Dashboard/index.js"],"names":["React","useEffect","useState","Link","socketio","api","Dashboard","spots","setSpots","requests","setRequests","user_id","localStorage","getItem","socket","query","on","data","console","log","loadSpots","response","get","headers","map","request","id","user","email","spot","company","date","_id","backgroundImage","thumbnail_url","price"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport socketio from 'socket.io-client';\r\nimport api from '../../services/api';\r\n\r\nimport './styles.css';\r\n\r\n\r\nexport default function Dashboard() {\r\n    const [spots, setSpots] = useState([]);\r\n    const [requests, setRequests] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const user_id = localStorage.getItem('user');\r\n        const socket = socketio('http://localhost:3333', {\r\n            query: { user_id },\r\n        });\r\n\r\n        socket.on('booking_request', data => {\r\n            console.log(data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        async function loadSpots() {\r\n            const user_id = localStorage.getItem('user');\r\n            const response = await api.get('/dashboard', {\r\n                headers: { user_id }\r\n            });\r\n\r\n            setSpots(response.data);\r\n        }\r\n\r\n        loadSpots();\r\n    }, []);\r\n    \r\n    return (\r\n        <>\r\n            <ul className=\"notifications\">\r\n                {requests.map(request => {\r\n                    <li key={request.id}>\r\n                        <p>\r\n                            <strong>{request.user.email}</strong> est√° solicitando uma reserva em <strong>{request.spot.company}</strong> para a data: <strong>{request.date}</strong>\r\n                            <button>ACEITAR</button>\r\n                            <button>REJEITAR</button>\r\n                        </p>\r\n                    </li>\r\n                })}\r\n            </ul>\r\n            <ul className=\"spot-list\">\r\n                {spots.map(spot => (\r\n                    <li key={spot._id}>\r\n                        <header style={{ backgroundImage: `url(${spot.thumbnail_url})`}}/>\r\n                        <strong>{spot.company}</strong>\r\n                        <span>{spot.price ? `R$${spot.price}/dia` : 'GRATUITO'}</span>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n \r\n            <Link to=\"/new\">\r\n                <button className=\"btn\">Cadastrar novo spot</button>\r\n            </Link>\r\n\r\n        </>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}